//进程的定义可以定义为一个等式
//P(x1, x2, ., xn) = Exp;P是进程名，X1/X2/Xn代表可选的参数列表，Exp是进程表达式，若进程无参数，可以将进程写为P或者P（）
//死锁进程使用STOP关键字//skip 表示跳过
#define N 5;
var x;
//Stop ;
//事件前缀的表述:e->p代表的意思是先执行e再执行P
//接下来我们定义一个售货机的模型，一旦有硬币投入，就自动售出咖啡，然后等待下一次硬币投入
VM() = insertcoin -> coffee -> VM();
//进程名是任意形式的字符串，但是，全局变量名称，全局常量名称，进程名称，进程参数名称，命题名称不能用作事件名称。
//事件内的语句块（又称数据操作），可以使用更新全局变量的赋值附加事件，如以下示例所示
Rest() = Stop;
Phil(i) = get.i.(i + 1)%N -> Rest();
//可以使用更新全局变量的赋值附加事件，如以下示例所示
add{x = x+1;} -> Stop;//其中，x是全局变量
//定义一个操作，用来查找一个数组中的最大值
var array = [0,2,4,7,1,3];
var ma = -1;
    
P() = findmax{
                var index = 0;//定义一个局部变量index表示数组下标
                while (index < 6) {
                        if (ma < array[index]) {
                            ma = array[index];
                        }
                        index = index+1;
                };
        } -> P();
        
//PAT中还支持++；--操作，x++代表的意思是x=x+1,y--代表的意思是y=y-1，y=x++代表的意思是x=x+1,y=x
var x_1 = 2;

var y;
      s() = add{x_1++;} -> minus{x_1--;} -> event{y=x++;} -> Skip;


